---
title: "Final project: Group 1"
format:
  html:
    embed-resources: true
editor: visual
---

# Members

-   Anna Lifousi (`s232979`)
-   Jordan Sylvester Fernandes (`s222497`)
-   Manuel Arcieri (`s230158`)
-   Quim Bech Vilaseca (`s233374`)
-   Xavier Viñas Margalef (`s233532`)

# Load data

## Load libraries

```{r}
#| echo: true
#| message: true

library("broom")
library("patchwork")
library("purrr")
library("readr")
library("stringr")
library("table1")
library("tidyverse")
```

## Download diabetes dataset

```{r}
#| echo: true
#| message: true

raw_dir <- "../_raw/"
data_file <- "diabetes.csv"
data_loc <- "https://r4bds.trifogli.rip/"

if (!dir.exists(raw_dir)) {
    dir.create(path = raw_dir)
}

if(!file.exists(str_c(raw_dir, data_file))){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
```

# Clean data

### Save dataset in data as tsv

```{r}
data <- read_csv("../_raw/diabetes.csv", col_types = cols(
  Pregnancies = col_integer(),
  Glucose = col_integer(),
  BloodPressure = col_integer(),
  SkinThickness = col_integer(),
  Insulin = col_integer(),
  BMI = col_number(),
  DiabetesPedigreeFunction = col_number(),
  Age = col_integer(),
  Outcome = col_integer()
))

data_dir <- '../data/'

if (!dir.exists(data_dir)) {
    dir.create(path = data_dir)
}

write_tsv(data, file = str_c(data_dir, '01_dat_load.tsv.gz'))
```

## Clean data

```{r}
data <- read_tsv('../data/01_dat_load.tsv.gz', col_types = cols(
  Pregnancies = col_integer(),
  Glucose = col_integer(),
  BloodPressure = col_integer(),
  SkinThickness = col_integer(),
  Insulin = col_integer(),
  BMI = col_number(),
  DiabetesPedigreeFunction = col_number(),
  Age = col_integer(),
  Outcome = col_integer()
  ))

columns_to_replace <- c("Glucose", "BloodPressure", "SkinThickness", "BMI","DiabetesPedigreeFunction", "Age")

data <- data |> 
  mutate_at(.vars = columns_to_replace, ~ifelse(. == 0, NA, .)) |>
  rename(BP = BloodPressure,
         Skin_thick = SkinThickness,
         DPF = DiabetesPedigreeFunction,
         Age_onset = Age) |>
  mutate(Insulin = ifelse(Outcome == 0 & Insulin == 0, NA, Insulin))

View(data)

write_tsv(data, file = '../data/01_dat_load.tsv')
data_dir <- '../data/'

if (!dir.exists(data_dir)) {
    dir.create(path = data_dir)
}

write_tsv(data, file = '../data/02_dat_clean.tsv.gz')
```

# Describe data

To address the description of the dataset, we are going calculate the basic statistics of the dataset, and also what they are about.

```{r}
data <- read_tsv('../data/02_dat_clean.tsv.gz', col_types = cols(
  Pregnancies = col_integer(),
  Glucose = col_integer(),
  BP = col_integer(),
  Skin_thick = col_integer(),
  Insulin = col_integer(),
  BMI = col_number(),
  DPF = col_number(),
  Age_onset = col_integer(),
  Outcome = col_integer()
  ))

summary(data)
```

### Pregnancies

The pregnancies attributes corresponds to the number of pregnancies that the patient has had. It only has discrete values that go from 0 to 17, with an median value of 3 pregnancies.

### Plasma Glucose Concentration

The plasma glucose levels are measured by a 2 hour oral glucose tolerance test (OGTT). This attribute shows the concentration of glucose in the patients blood in mg/dL. It has continuous data and the base and max value are 44 mg/dL and 199 mg/dL, accordingly. Moreover, the mean value is 121.7 mg/dL.

### Diastolic Blood Pressure

The diastolic blood pressure is a continuous variable that has as units mm Hg, and it has as minimum and maximum values 24 mm Hg and 122 mm Hg, respectively. Furthermore, the mean value is 72.41 mm Hg. However, it lacks a true zero point. A blood pressure equal of zero is not the absence of blood pressure; it's a theoretical minimum point.

### Triceps Skin Thickness

This attribute describes the depth of adipose tissue in mm. It is a continuous variable with an average of 29.15 mm, and minimum and maximum values of 7 mm and 99 mm, respectively. Skin thickness is also measured on an interval scale and has a meaningful order. Like blood pressure, it lacks a true zero point.

### Insulin

This attribute represent the 2-Hour Serum Insulin. The levels of the insulin in the blood are measured in μU/ml and go from 0 to 846 μU/ml, with a mean value of 115 μU/ml. Insulin level in blood is a ratio variable given that it has a true zero point. If the patient is diabetic, we can assume that a 0 value can be plausible since it means that cannot produce insulin by themselves.

### Body Mass Index

The Body Mass Index or BMI is a relationship between the weight in kg and the height in mm of the patient. It is a continuous variable that in our dataset goes from 18.20 kg/mm to 67.10 kg/mm, with an average of 32.36. BMI is considered a ratio variable. It has a true zero point (a BMI of zero indicates the absence of body mass) and can be ranked in meaningful order.

### Diabetes Pedigree Function

This attribute represents the measure of the expected genetic influence of affected and unaffected relatives on the subject. It is a continuous variable and it is a mathematical calculation employed to gauge the probability of diabetes based on family history, typically yielding scores between 0.08 and 2.42. In our dataset it has an average of 0.47.

### Age Onset

This attribute shows the age at onset, at the time of study of the patients as a discrete variable. It has a median value of 29 years of age, a minimum of 21 and a maximum of 81.

### Outcome

This attribute is a class variable (0 or 1), indicating whether the patient has diabetes or not. This a dependent variable, whose value is calculated based on the other aforementioned variables

# Augment data

```{R}
data <- read_tsv('../data/02_dat_clean.tsv.gz', col_types = cols(
  Pregnancies = col_integer(),
  Glucose = col_integer(),
  BP = col_integer(),
  Skin_thick = col_integer(),
  Insulin = col_integer(),
  BMI = col_number(),
  DPF = col_number(),
  Age_onset = col_integer(),
  Outcome = col_integer()
  ))

write_tsv(data, file = '../data/03_dat_aug.tsv.gz')
```

## Analyse data

```{r}
Boxplots <- function(attribute) {
  Boxplot <- ggplot(data, aes(x = 1, y = data[[attribute]])) +
    geom_boxplot() +
    theme_minimal() +
    labs(x = NULL, y = attribute)
  return(Boxplot)
}

Pregnancies <- Boxplots("Pregnancies") +
  labs(title = paste("Boxplots of all the attributes"))

Glucose <- Boxplots("Glucose")

BP <- Boxplots("BP")+
  labs(y = "Blood Pressure")

Skin_thick <- Boxplots("Skin_thick") +
  labs(y = "Skin Thickness")

Insulin <- Boxplots("Insulin")

BMI <- Boxplots("BMI")+
  labs(y = "Body Mass Index")

DPF <- Boxplots("DPF") +
  labs(y = "Diabetes Ped. Func.")

Age_onset <- Boxplots("Age_onset") +
  labs(y = "Age Onset")

combination_plot <- (Pregnancies + Glucose + BP + Skin_thick + Insulin + BMI + DPF + Age_onset) + plot_layout(guides = 'collect', ncol = 4) 

combination_plot
```

Change age_onset to age ranges. Change Outcome variable to Diabetic (1) and Non-diabtic (0).

BMI density plot? and Age ranges. Pregnancies?

Scatter plot of all the variables against each other.

Boxplot.

Correlation Heatmap.

Choose linear regression??? Predict the Skin thickness according to the blood pressure.

Goal: predict diabetic or non-diabetic. PCA : with the outcome variable.
